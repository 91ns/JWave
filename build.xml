<!-- JWave Copyright 2008-2016 Christian Scheiblich (cscheiblich@gmail.com) -->
<project name="JWave" default="dist" basedir=".">

  <description>
    ant build file for JWave; https://github.com/cscheiblich/JWave
    TODO: set your OS dependent path to JUnit JAR file
  </description>
 
  <!-- setting directories and files --> 
  <property name="src" location="src"/>
  <property name="test" location="test"/>
  <property name="dist" location="dist"/>
  <property name="build" location="build"/>
  <property name="jwave" location="${dist}/${ant.project.name}.jar"/>

  <!-- check for OS -->
  <condition property="isMac">
    <os family="mac" />
  </condition>

  <condition property="isWin">
    <os family="windows" />
  </condition>

  <condition property="isUnix">
    <os family="unix" />
  </condition>

  <!-- operating system specific targets -->
  <target name="doMac" if="isMac">
    <echo message="OS is a Mac target" />
    <!-- set the path to a MAC or Unix OS below -->
    <property name="junit" location="IS NOT SET - SET IT!"/>  
    <echo message="JUnit path: ${junit}" />
  </target>

  <target name="doWin" if="isWin">
    <echo message="OS is a Windows target" />
    <!-- set the path to a Windows OS below -->
    <property name="junit" location="C:\Portable\eclipse\plugins\org.junit_4.11.0.v201303080030/junit.jar"/>
    <echo message="JUnit path: ${junit}" />
  </target>

  <target name="doUnix" if="isUnix">
    <echo message="OS is a Unix target" />
    <!-- set the path to a GNU/Linux or Unix OS below -->
    <property name="junit" location="/usr/share/java/junit4.jar"/>  
    <echo message="JUnit path: ${junit}" />
  </target>
   
  <path id="classpath.junit">
    <pathelement location="${junit}"/>
  </path>

  <path id="classpath.jwave">
    <pathelement location="${jwave}"/>
  </path>

  <path id="classpath.tests">
    <pathelement location="${test}"/>
  </path>

  <path id="classpath.build">
    <pathelement location="${build}"/>
  </path>

  <target name="init" depends="doMac, doWin, doUnix">
    <tstamp/>
    <echo message="OS Name is:         ${os.name}" />
    <echo message="OS Architecture is: ${os.arch}" />
    <echo message="OS Version is:      ${os.version}" />
    <echo message="JUnit path: ${junit}" />
    <mkdir dir="${build}"/>
    <mkdir dir="${dist}"/>
  </target>

  <target name="compile" depends="init" description="compile the source">
    <javac srcdir="${src}" destdir="${build}" includeantruntime="false">
      <classpath refid="classpath.junit"/>
    </javac>
  </target>

  <target name="dist" depends="compile" description="generates distribution">
    <jar jarfile="${dist}/JWave.jar" basedir="${build}"/>
    <!-- jar jarfile="${dist}/JWave-${DSTAMP}.jar" basedir="${build}"/ -->
  </target>

  <target name="run" depends="dist" description="run console example">
    <java fork="true" failonerror="yes" classname="jwave.JWave">
      <classpath refid="classpath.jwave"/>
      <arg line="Fast Wavelet Transform Daubechies 20"/>
    </java>
  </target>

  <target name="test" depends="dist" description="build and run JUnit tests">
    <javac srcdir="${test}" destdir="${build}" includeantruntime="false">
      <classpath refid="classpath.junit"/>
      <classpath refid="classpath.jwave"/>
    </javac>
    <junit haltonfailure="true" showoutput="true" printsummary="true">
      <classpath refid="classpath.junit"/>
      <classpath refid="classpath.jwave"/>
      <classpath refid="classpath.tests"/>
      <classpath refid="classpath.build"/>
      <formatter type="plain"/>
      <batchtest fork="yes" todir="${build}">
        <fileset dir="${build}">
          <include name="**/*Test.class"/>
        </fileset>
      </batchtest>
    </junit>
  </target>
  
  <target name="clean" description="clean up - delete build directory">
    <delete dir="${build}"/>
  </target>
  
</project>
